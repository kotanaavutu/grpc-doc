name: Readme

on:
  push:
    branches: [test]

jobs:
  Readme-Docs-Upload:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      PROTO_DIR: proto
    steps:
      - uses: actions/checkout@v2

      - uses: wizhi/setup-buf@v1
        with:
          version: "0.36.0"
      - uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
      - name: Installing protoc-gen-go
        run: |
          go get github.com/golang/protobuf/protoc-gen-go
          go get google.golang.org/grpc/cmd/protoc-gen-go-grpc
          go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc

      - name: Run protoc command
        run: |
          mkdir documents
          pwd
          protoc --doc_out=./documents --doc_opt=markdown,index.md proto/*.proto
          protoc --doc_out=./documents --doc_opt=markdown,index-1.md proto/*.proto
          protoc --doc_out=./documents --doc_opt=markdown,index-2.md proto/*.proto

      - name: Check category.md file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "category.md"

      - name: Create header file
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
          touch ./category.md
          echo "---
          title: Syncing Docs
          excerpt: Update your docs automatically with `rdme`, ReadMe's official CLI and GitHub Action!
          category: ${{ secrets.README_API_DEFINITION_ID }}
          ---
          " > ./category.md
        shell: bash

      - name: Show category file content
        run: |
          cat ./category.md

      - name: Get and store current deploymentId
        run: |
          find ./documents  -name '*.md' -type f
        id: old-deployment-id

      - name: files list newww
        run: |
          echo "${{ steps.old-deployment-id.outputs.stdout }}"

      - name: Finding files and store to output
        id: finding-files
        run: |
          output="$(find ./documents  -name '*.md')"
          echo "::set-output name=changed-fields-output::$output"
        shell: bash

      - name: files list olddd
        run: |
          echo "${{ steps.finding-files.outputs.stdout }}"

      - name: files list
        run: |
          echo "${{ steps.finding-files.outputs.FILELIST }}"

      - name: Processing my found files from output
        run: |
          IFS=$'\n' read -a myarray <<< ${{ steps.finding-files.outputs.FILELIST }}
          for i in "${myarray[@]}"; do
            file_name=$(basename "${i}")
            echo $file_name
          done

      # - name: Add category to md file
      #   run: |
      #     cat ./category.md ./documents/index.md > ./documents/index-new.md
      #   shell: bash

      # - name: Show file content
      #   run: |
      #     rm ./documents/index.md
      #     ls ./documents
      #     cat ./documents/index-new.md

      # - name: Sync docs to ReadMe
      #   uses: readmeio/rdme@main
      #   with:
      #     rdme: docs ./documents --key=${{ secrets.README_DEVELOPERS_API_KEY }} --version=1.0
