name: Go

on:
  pull_request:
    branches: [master]

jobs:
  Automated-classdiagrams-gen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wizhi/setup-buf@v1
        with:
          version: "0.36.0"
      - uses: arduino/setup-protoc@v1
        with:
          version: "3.x"

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Installing protoc-gen-go
        run: |
          go get github.com/golang/protobuf/protoc-gen-go
          go get google.golang.org/grpc/cmd/protoc-gen-go-grpc

      - name: Get protoc-gen-doc
        run: go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc

      - name: Run protoc command
        run: |
          protoc --doc_out=./generated-docs --doc_opt=html,index.html proto/*.proto

      - id: set_var
        run: |
          content=`cat ./generated-docs/index.html | tr -d '\n'`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
      - run: |
          echo "${{steps.set_var.outputs.packageJson}}"

      - name: Read generated html file
        id: filedata
        uses: juliangruber/read-file-action@v1
        with:
          path: ./generated-docs/index.html

      - name: Echo package.json
        run: echo "${{ steps.filedata.outputs.content }}"

      - run: echo ::set-output name=things::$(grep '\S' ./generated-docs/index.html)
        id: counter
        shell: bash

      - name: Echo things.json
        run: echo "${{ steps.counter.outputs.things }}"

      - name: Make a curl request to Readme
        env:
          STEP_OUTPUT: ${{steps.counter.outputs.things}}
        run: |
          CODE=`curl --request POST \
              --url https://dash.readme.com/api/v1/custompages \
              --header 'Accept: application/json' \
              --header 'Authorization: Basic cmRtZV94bjhzOWgwYWY3YTIwMGU3ZWY3YWIxZGJjMjBmYTkyMmI5ZDBmZGQ1NDAyMGEyYWE3OTQ3NGQ3MTk2ODliOGYyYmY4NjgwOg==' \
              --header 'Content-Type: application/json' \
              --data '{ \
                "htmlmode": true,
                "hidden": true,
                "title": "Automation page",
                "html": "${{steps.set_var.outputs.packageJson}}", \
              }'`
          echo "$CODE"    
          if [ $CODE!="200" ] 
          then
              echo "SUCCESS"
          else
              echo "FAILURE"
          fi
